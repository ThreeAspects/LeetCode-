class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> list=new ArrayList<>();
        int N=nums.length;
        if(N==0) return list;
        int[] dp=new int[N];
        int[] dp2=new int[N];
        Arrays.sort(nums);
        Arrays.fill(dp,1);
        Arrays.fill(dp2,-1);
        for(int i=1;i<N;i++){
            for(int j=0;j<i;j++){
                if(nums[i]%nums[j]==0){
                    if(dp[i]<dp[j]+1){
                        dp[i]=dp[j]+1;
                        dp2[i]=j;
                    }
                }
            }
        }
        int index=0;
        for(int i=0;i<N;i++){
            if(dp[i]>dp[index]){
                index=i;
            }
        }
        while(index!=-1){
            list.add(nums[index]);
            index=dp2[index];
        }
        return list;
    }
}